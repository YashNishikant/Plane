using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerMovement : MonoBehaviour
{

    float velocity = 0;
    float velocityupward = 0;
    public float increase = 0;
    float increaseupward = 0;
    float rotate = 0;
    float rotateY = 0;
    bool hitwall;
    bool hitwall2;
    float rotateprop = 0;
    public float bounds;
    public float boundsTOP;
    public float boundsBOTTOM;

    public GameObject propellor;

    private void Start(){
        increaseupward = increase;
    }

    void FixedUpdate(){
        playerMovement();
    }

    void playerMovement(){

        if ((int)velocityupward == 0) {
            transform.rotation = Quaternion.Euler(new Vector3(0, 0, rotate * -10));
        }
        rotateprop+=25f;
        if (rotateprop == 1000) {
            rotateprop = 0;
        }

        if (Input.GetKey(KeyCode.W) && transform.position.y < boundsTOP) {

            if (hitwall2)
            {
                velocityupward = 0;
            }

            velocityupward += increaseupward * Time.deltaTime;
            rotateY = velocityupward;
            hitwall2 = false;
        }
        if (Input.GetKey(KeyCode.S) && transform.position.y > boundsBOTTOM) {

            if (hitwall2)
            {
                velocityupward = 0;
            }

            velocityupward -= increaseupward * Time.deltaTime;
            rotateY = velocityupward;
            hitwall2 = false;
        }

        if (Input.GetKey(KeyCode.D) && transform.position.x < bounds) {

            if (hitwall) {
                velocity = 0;
            }
            velocity += increase * Time.deltaTime;
            rotate = velocity;
            hitwall = false;
        }
        else if (transform.position.x > bounds) {
            transform.position = new Vector3(bounds, transform.position.y, transform.position.z);
            hitwall = true;
            adjrotation();
        }
        if (transform.position.y > boundsTOP) {
            transform.position = new Vector3(transform.position.x, boundsTOP, transform.position.z);
            hitwall2 = true;
            adjrotation2();
        }
        if (Input.GetKey(KeyCode.A) && transform.position.x > -bounds) {

            if (hitwall){
                velocity = 0;
            }
            velocity -= increase * Time.deltaTime;
            rotate = velocity;
            hitwall = false;
        }
        else if (transform.position.x < -bounds) {
            transform.position = new Vector3(-bounds, transform.position.y, transform.position.z);
            hitwall = true;
            adjrotation();
        }
        if (transform.position.y < boundsBOTTOM) {
            transform.position = new Vector3(transform.position.x, boundsBOTTOM, transform.position.z);
            hitwall2 = true;
            adjrotation2();
        }

        transform.rotation = Quaternion.Euler(new Vector3(rotateY * -10, 0, rotate * -10));
        propellor.transform.rotation = Quaternion.Euler(new Vector3(rotateprop, -90, 0));
        transform.position += new Vector3(velocity, velocityupward, 0) * Time.deltaTime;
    }

    void adjrotation() {
        if (rotate > 0)
        {
            rotate -= 2*increase * Time.deltaTime;
        }
        if (rotate < 0)
        {
            rotate += 2*increase * Time.deltaTime;
        }
    }

    void adjrotation2()
    {
        if (rotateY > 0)
        {
            rotateY -= 2 * increaseupward * Time.deltaTime;
        }
        if (rotateY < 0)
        {
            rotateY += 2 * increaseupward * Time.deltaTime;
        }
    }

}
